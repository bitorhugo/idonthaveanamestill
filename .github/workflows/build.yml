# GitHub Action for Laravel with PostgreSQL
name: seekNfind Workflow
on:
  push:
    branches-ignore:
      - main
jobs:

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  tests:
    name: PHPUnit
    runs-on: ubuntu-latest
    needs: SonarCloud
    env:
      DB_CONNECTION: pgsql
      DB_HOST: localhost
      DB_PASSWORD: 'secret'
      DB_USERNAME: bitor
      DB_DATABASE: seeknfindtest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: bitor
          POSTGRES_PASSWORD: 'secret'
          POSTGRES_DB: seeknfindtest
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, dom, fileinfo, pgsql
          coverage: xdebug

      - name: Start postgresql service
        run: sudo systemctl start postgresql.service

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate
      - name: Clear Config
        run: php artisan config:clear

      - name: Dir Permission
        run: chmod -R 777 storage/ bootstrap/cache
        
      - name: Link Storage
        run: php artisan storage:link

      - name: Run Migration
        run: php artisan migrate -v
        env:
          DB_PORT: ${{ job.services.postgres.ports[5432] }}

      - name: Test with phpunit
        run: vendor/bin/phpunit
        env:
          DB_PORT: ${{ job.services.postgres.ports[5432] }}
